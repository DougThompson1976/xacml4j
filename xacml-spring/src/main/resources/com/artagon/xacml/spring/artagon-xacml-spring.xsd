<?xml version="1.0" encoding="UTF-8"?>

<xsd:schema xmlns="http://www.artagon.com/schema/xacml/spring"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xacml-spring="http://www.artagon.com/schema/xacml/spring"
	xmlns:xacml="urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"
	targetNamespace="http://www.artagon.com/schema/xacml/spring"
	elementFormDefault="qualified" 
	attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.springframework.org/schema/beans"
		schemaLocation="http://www.springframework.org/schema/beans/spring-beans.xsd" />
	
	<xsd:import namespace="urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"
		schemaLocation="http://docs.oasis-open.org/xacml/3.0/xacml-core-v3-schema-wd-17.xsd"/>
	

	<xsd:element name="FunctionProvider" type="xacml-spring:FunctionProviderType"/>
	<xsd:complexType name="FunctionProviderType">
		<xsd:attribute name="class" type="xsd:string" use="optional" />
		<xsd:attribute name="ref" type="xsd:string" use="optional" />
	</xsd:complexType>

	<xsd:element name="FunctionProviders" type="xacml-spring:FunctionProvidersType"/>	
	<xsd:complexType name="FunctionProvidersType">
		<xsd:complexContent>
			<xsd:extension base="beans:identifiedType">
				<xsd:sequence>
					<xsd:element ref="xacml-spring:FunctionProvider"
						minOccurs="1" maxOccurs="unbounded" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:element name="DecisionCombingingAlgorithmProvider" type="xacml-spring:FunctionProviderType"/>
	<xsd:complexType name="DecisionCombingingAlgorithmProviderType">
		<xsd:attribute name="class" type="xsd:string" use="optional" />
		<xsd:attribute name="ref" type="xsd:string" use="optional" />
	</xsd:complexType>

	<xsd:element name="DecisionCombingingAlgorithmProviders" type="xacml-spring:DecisionCombingingAlgorithmProvidersType"/>
	<xsd:complexType name="DecisionCombingingAlgorithmProvidersType">
		<xsd:complexContent>
			<xsd:extension base="beans:identifiedType">
				<xsd:sequence>
					<xsd:element ref="xacml-spring:DecisionCombingingAlgorithmProviders" minOccurs="0" maxOccurs="unbounded" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	
	<!-- Attribute resolvers -->	
	<xsd:element name="AttributeResolver" type="xacml-spring:AttributeResolverType"/>
	<xsd:complexType name="AttributeResolverType">
		<xsd:attribute name="ref" type="xsd:string" use="required" />
		<xsd:attribute name="policyId" type="xsd:string" use="optional"/>
	</xsd:complexType>
	
	<xsd:element name="ContentResolver" type="xacml-spring:ContentResolverType"/>
	<xsd:complexType name="ContentResolverType">
		<xsd:attribute name="ref" type="xsd:string" use="required" />
		<xsd:attribute name="policyId" type="xsd:string" use="optional"/>
	</xsd:complexType>
	
	
	<xsd:element name="ResolverRegistry">
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="beans:identifiedType">
					<xsd:sequence minOccurs="0" maxOccurs="unbounded">
						<xsd:choice>
							<xsd:element ref="xacml-spring:AttributeResolver"/>
							<xsd:element ref="xacml-spring:ContentResolver"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
		
	<xsd:element name="PolicyInformationPoint">
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="beans:identifiedType">
					<xsd:attribute name="resolvers" type="xsd:string" use="required" />
				    <xsd:attribute name="cache" type="xsd:string" use="optional"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	
	
	<xsd:element name="PolicyIdReference" type="xacml:IdReferenceType"/>
	<xsd:element name="PolicySetIdReference" type="xacml:IdReferenceType"/>
	
	<xsd:complexType name="PolicyRepositoryBaseType">
		<xsd:complexContent>
			<xsd:extension base="beans:identifiedType">
				<xsd:attribute name="extensionFunctions" type="xsd:string"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:element name="InMemoryPolicyRepository" type="xacml-spring:InMemoryPolicyRepositoryType"/>
	<xsd:complexType name="InMemoryPolicyRepositoryType">
		<xsd:complexContent>
			<xsd:extension base="xacml-spring:PolicyRepositoryBaseType">
				<xsd:attribute name="resources" type="xsd:string" use="required" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	
	<xsd:element name="RequestContextHandler" type="xacml-spring:RequestContextHandlerType"/>
	
	<xsd:complexType name="RequestContextHandlerType">
		<xsd:complexContent>
			<xsd:extension base="beans:identifiedType">
				<xsd:attribute name="ref" type="xsd:string" use="required" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:element name="RequestContextHandlerChain">
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="beans:identifiedType">
					<xsd:sequence minOccurs="0">
						<xsd:choice>
							<xsd:element ref="xacml-spring:RequestContextHandler"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	
	
	<xsd:element name="PolicyDecisionPoint" type="xacml-spring:PolicyDecisionPointType"/>
	<xsd:complexType name="PolicyDecisionPointType">
		<xsd:complexContent>
			<xsd:extension base="beans:identifiedType">
				<xsd:sequence>
					<xsd:choice minOccurs="1" maxOccurs="1">
						<xsd:element ref="xacml-spring:PolicyIdReference"/>
						<xsd:element ref="xacml-spring:PolicySetIdReference"/>
					</xsd:choice>
				</xsd:sequence>
				<xsd:attribute name="repository" type="xsd:string" use="required"/>
				<xsd:attribute name="pip" type="xsd:string" use="required"/>
				<xsd:attribute name="handlers" type="xsd:string" use="optional"/>
				<xsd:attribute name="auditor" type="xsd:string" use="optional"/>
				<xsd:attribute name="cache" type="xsd:string" use="optional"/>
				<xsd:attribute name="xpathProvider" type="xsd:string" use="optional"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
</xsd:schema>
