<?xml version="1.0" encoding="UTF-8"?>

<xsd:schema xmlns="http://www.artagon.com/schema/xacml/spring"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xacml-spring="http://www.artagon.com/schema/xacml/spring"
	targetNamespace="http://www.artagon.com/schema/xacml/spring"
	elementFormDefault="qualified" attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.springframework.org/schema/beans"
		schemaLocation="http://www.springframework.org/schema/beans/spring-beans.xsd" />


	<xsd:element name="FunctionProvider">
		<xsd:complexType>
			<xsd:attribute name="class" type="xsd:string" use="optional" />
			<xsd:attribute name="ref" type="xsd:string" use="optional" />
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="FunctionProviders" type="xacml-spring:FunctionProvidersType"/>	

	<xsd:complexType name="FunctionProvidersType">
		<xsd:complexContent>
			<xsd:extension base="beans:identifiedType">
				<xsd:sequence>
					<xsd:element ref="xacml-spring:FunctionProvider"
						minOccurs="1" maxOccurs="unbounded" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	
	<xsd:element name="AttributeResolver" type="xacml-spring:AttributeResolverType"/>
	<xsd:complexType name="AttributeResolverType">
		<xsd:complexContent>
			<xsd:extension base="beans:identifiedType">
				<xsd:attribute name="ref" type="xsd:string" use="required" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:element name="AttributeResolvers" type="xacml-spring:AttributeResolversType"/>
	<xsd:complexType name="AttributeResolversType">
		<xsd:sequence>
			<xsd:element ref="xacml-spring:AttributeResolver" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:element name="PolicyInformationPoint">
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="beans:identifiedType">
					<xsd:sequence>
						<xsd:element ref="xacml-spring:AttributeResolvers" minOccurs="0" maxOccurs="1"/> 
					</xsd:sequence>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:complexType name="IdReferenceType">
		<xsd:simpleContent>
			<xsd:extension base="xsd:anyURI">
				<xsd:attribute name="Version" type="xacml-spring:VersionMatchType" use="optional"/>
				<xsd:attribute name="EarliestVersion" type="xacml-spring:VersionMatchType" use="optional"/>
				<xsd:attribute name="LatestVersion" type="xacml-spring:VersionMatchType" use="optional"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>

	<xsd:simpleType name="VersionMatchType">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="((\d+|\*)\.)*(\d+|\*|\+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	
	<xsd:element name="PolicySetIdReference" type="xacml-spring:IdReferenceType"/>
	<xsd:element name="PolicyIdReference" type="xacml-spring:IdReferenceType"/>
	
	<xsd:element name="PolicyDomain">
		<xsd:complexType>
			<xsd:complexContent>
			<xsd:extension base="beans:identifiedType">
				<xsd:sequence>
					<xsd:choice minOccurs="1" maxOccurs="unbounded">
						<xsd:element ref="xacml-spring:PolicySetIdReference"/>
						<xsd:element ref="xacml-spring:PolicyIdReference"/>
					</xsd:choice>
				</xsd:sequence>
				<xsd:attribute name="name" type="xsd:string" use="required"/>
			</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:complexType name="PolicyRepositoryBaseType">
		<xsd:complexContent>
			<xsd:extension base="beans:identifiedType">
				<xsd:sequence>
					<xsd:element name="ExtensionFunctions" type="xacml-spring:FunctionProvidersType" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:element name="InMemoryPolicyRepository" type="xacml-spring:InMemoryPolicyRepositoryType"/>
	
	<xsd:complexType name="InMemoryPolicyRepositoryType">
		<xsd:complexContent>
			<xsd:extension base="xacml-spring:PolicyRepositoryBaseType">
				<xsd:attribute name="resources" type="xsd:string" use="required" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
</xsd:schema>
